/***路径操作***/  
创建文件是对文件名称路径进行过滤
调用：PathUtil.stringFilter(path)

/***密码管理***/
禁止定义明文变量、配置等 需要模糊化或采用较安全的方式进行加密

/***请求响应加解密***/
请求：      
var datas = encryptCode({
	params:JSON.stringify({
		name : "张三",
		age:20
	})
})
$.ajax({
	type : "post",
	url : "/getData",
	data:datas,
	async : true,
	success : function(xhr) {
		console.log(xhr)
	},
	error : function(xhr) {
		console.log(xhr);
	}
});

所有参数统一定义key为【params】的json串，调用encryptCode({params:jsonStr}) 
encryptCode函数说明：
1.调用该函数时 自动生成时间戳【timestamp】和加密标识【encryptFlag】= 1
例：{params:jsonStr,timestamp:201291219092019,encryptFlag:1}
2.根据key进行排序
例：{encryptFlag:1,params:jsonStr,timestamp:201291219092019}
3.遍历aes加密 根据参数拼接sign 用作放篡改
例：sign="encryptFlag=1&params={"name":"张三","age":20}&timestamp=152057743466960027"
4.md5加密sign
例：{encryptFlag:1,params:jsonStr,sign:md5Str,timestamp:201291219092019}

/***访问控制***/
禁止对自增长主键进行单个主键操作。（对单个自增长主键进行操作需2个以上有效参数，或者将自增长主键设计为UUID之类的自定义主键）

/***Cookie httponly  flag ***/
设置 cookie 时，加入属性即可 
response.setHeader("SET-COOKIE", "user=" + request.getParameter("cookie") + ";HttpOnly"); 

/***私有信息侵犯***/
将表单autocomplete 属性的默认值为 on 设置为off

/***访问控制修饰符篡改***/
Field反射获取类设置属性field.setAccessible(true);

/***在Finally中返回***/
将返回指令移到 finally 块之外。如果必须要 finally 块返回一个值，可以简单地将该返回值赋给一个本地变量，然后在 finally 块执行完毕后返回该变量

/***区域依赖性比较***/
在未指定区域设置时  在转换大小写时始终确保指定默认区域设置toUpperCase(Locale.ENGLISH)

/***配置文件加密处理***/
参考：http://blog.csdn.net/aixiaoyang168/article/details/49930513

